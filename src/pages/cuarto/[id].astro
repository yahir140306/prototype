---
import Layout from "../../layouts/Layout.astro";
import { createClient } from "../../lib/supabase";
import { decodeHexUrl } from "../../utils/urlDecoder.js";

const { id } = Astro.params;

const supabase = createClient({
  request: Astro.request,
  cookies: Astro.cookies,
});

const { data: cuarto, error } = await supabase
  .from("cuartos")
  .select("*")
  .eq("id", id)
  .single();

if (error || !cuarto) {
  return Astro.redirect("/404");
}

const imagenes = [cuarto.imagen_1, cuarto.imagen_2, cuarto.imagen_3]
  .map(decodeHexUrl)
  .filter(Boolean);

if (imagenes.length === 0) {
  imagenes.push("/Images/default.jpeg");
}
---

<Layout>
  <html lang="es">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>{cuarto.name}</title>
      <script src="https://cdn.tailwindcss.com"></script>
      <!-- HTML2Canvas para generar im√°genes -->
      <script
        src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"
      ></script>
      <style>
        /* Oculta scrollbar horizontal */
        .no-scrollbar::-webkit-scrollbar {
          display: none;
        }
        .no-scrollbar {
          -ms-overflow-style: none;
          scrollbar-width: none;
        }

        /* Estilos para la tarjeta de descarga */
        .download-card {
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          font-family:
            "Inter",
            -apple-system,
            BlinkMacSystemFont,
            sans-serif;
        }

        .download-hidden {
          position: absolute;
          top: -9999px;
          left: -9999px;
          width: 800px;
          height: 600px;
        }

        .line-clamp-4 {
          display: -webkit-box;
          -webkit-line-clamp: 4;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      </style>
    </head>
    <body class="bg-gray-100 text-gray-800 min-h-screen">
      <main class="max-w-4xl mx-auto px-4 py-8 space-y-6">
        <!-- Bot√≥n Volver -->
        <a href="/" class="text-blue-600 hover:underline">‚Üê Volver</a>

        <!-- T√≠tulo y precio -->
        <h1 class="text-3xl font-bold">{cuarto.name}</h1>
        <p class="text-xl text-blue-600 font-semibold">
          ${cuarto.precio} / mes
        </p>

        <!-- Carrusel con autoplay -->
        <div
          id="carousel"
          class="overflow-x-auto no-scrollbar flex snap-x snap-mandatory scroll-smooth rounded-lg"
        >
          {
            imagenes.map((url, i) => (
              <img
                src={url}
                alt={`Imagen ${i + 1}`}
                class="snap-center w-full h-[500px] object-cover flex-shrink-0 rounded-lg shadow"
                style="min-width: 100%"
              />
            ))
          }
        </div>

        <!-- Descripci√≥n -->
        <section>
          <h2 class="text-xl font-semibold mb-2">Descripci√≥n</h2>
          <p class="bg-white p-4 rounded-lg shadow">{cuarto.descripcion}</p>
        </section>

        <!-- Info -->
        <section class="grid md:grid-cols-2 gap-4">
          <div class="bg-white p-4 rounded-lg shadow">
            <h3 class="font-semibold mb-2">Caracter√≠sticas</h3>
            <ul class="list-disc list-inside text-gray-700">
              <li>Amueblado</li>
              <li>Buena iluminaci√≥n</li>
              <li>√Åreas comunes</li>
            </ul>
          </div>
          <div class="bg-white p-4 rounded-lg shadow">
            <h3 class="font-semibold mb-2">Ubicaci√≥n</h3>
            <ul class="list-disc list-inside text-gray-700">
              <li>C√©ntrico</li>
              <li>Transporte cercano</li>
              <li>Zona tranquila</li>
            </ul>
          </div>
        </section>

        <!-- Bot√≥n de contacto y descarga -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <button
            class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
          >
            Contactar al Propietario
          </button>
          <button
            id="download-btn"
            class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center gap-2"
          >
            <svg
              class="w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 10v6m0 0l-4-4m4 4l4-4m-6 2a8 8 0 100-16 8 8 0 000 16z"
              ></path>
            </svg>
            Descargar Tarjeta
          </button>
        </div>
      </main>

      <!-- Tarjeta oculta para descarga -->
      <div id="download-card" class="download-hidden">
        <div
          class="download-card w-full h-full text-white p-8 flex flex-col justify-between"
        >
          <!-- Header -->
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-3">
              <div
                class="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center"
              >
                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                  <path
                    d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                  ></path>
                </svg>
              </div>
              <div>
                <h1 class="text-2xl font-bold">RANTU</h1>
                <p class="text-sm opacity-80">Tu pr√≥ximo hogar</p>
              </div>
            </div>
            <div class="text-right">
              <div class="text-3xl font-bold">
                ${cuarto.precio.toLocaleString()}
              </div>
              <div class="text-sm opacity-80">por mes</div>
            </div>
          </div>

          <!-- Contenido principal -->
          <div class="flex-1 flex items-center justify-between py-8">
            <!-- Imagen principal -->
            <div class="w-80 h-60 rounded-xl overflow-hidden shadow-2xl">
              <img
                src={imagenes[0]}
                alt={cuarto.name}
                class="w-full h-full object-cover"
                crossorigin="anonymous"
              />
            </div>

            <!-- Informaci√≥n -->
            <div class="flex-1 pl-8">
              <h2 class="text-4xl font-bold mb-4 leading-tight">
                {cuarto.name}
              </h2>
              <p class="text-lg opacity-90 mb-6 leading-relaxed line-clamp-4">
                {cuarto.descripcion}
              </p>

              <!-- Caracter√≠sticas destacadas -->
              <div class="space-y-2">
                <div class="flex items-center space-x-2">
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clip-rule="evenodd"></path>
                  </svg>
                  <span>Completamente amueblado</span>
                </div>
                <div class="flex items-center space-x-2">
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clip-rule="evenodd"></path>
                  </svg>
                  <span>Ubicaci√≥n c√©ntrica</span>
                </div>
                <div class="flex items-center space-x-2">
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                      clip-rule="evenodd"></path>
                  </svg>
                  <span>Disponible inmediatamente</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Footer -->
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4">
              <div class="text-sm opacity-80">
                üè† Encuentra m√°s opciones en RANTU.com
              </div>
            </div>
            <div class="text-sm opacity-80">
              Generado el {new Date().toLocaleDateString("es-ES")}
            </div>
          </div>
        </div>
      </div>

      <!-- Scripts para descarga y autoplay -->
      <script is:inline>
        // Funci√≥n para descargar la tarjeta
        async function descargarTarjeta() {
          const downloadBtn = document.getElementById("download-btn");
          const originalText = downloadBtn.innerHTML;

          try {
            // Cambiar texto del bot√≥n
            downloadBtn.innerHTML = `
              <svg class="w-5 h-5 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
              </svg>
              Generando...
            `;
            downloadBtn.disabled = true;

            const card = document.getElementById("download-card");

            // Configuraci√≥n para html2canvas
            const canvas = await html2canvas(card, {
              width: 800,
              height: 600,
              scale: 2, // Mayor resoluci√≥n
              useCORS: true,
              allowTaint: true,
              backgroundColor: null,
              logging: false,
              onclone: function (clonedDoc) {
                // Asegurar que las im√°genes se carguen en el clon
                const clonedCard = clonedDoc.getElementById("download-card");
                clonedCard.style.position = "relative";
                clonedCard.style.top = "0";
                clonedCard.style.left = "0";
              },
            });

            // Crear el enlace de descarga
            const link = document.createElement("a");
            link.download = `cuarto-${encodeURIComponent("${cuarto.name}")}-${Date.now()}.png`;
            link.href = canvas.toDataURL("image/png", 1.0);

            // Simular click para descargar
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);

            // Mostrar mensaje de √©xito
            alert("¬°Tarjeta descargada exitosamente!");
          } catch (error) {
            console.error("Error generando tarjeta:", error);
            alert("Error al generar la tarjeta. Int√©ntalo de nuevo.");
          } finally {
            // Restaurar bot√≥n
            downloadBtn.innerHTML = originalText;
            downloadBtn.disabled = false;
          }
        }

        // Event listener para el bot√≥n de descarga
        document
          .getElementById("download-btn")
          .addEventListener("click", descargarTarjeta);
      </script>
      <script src="./script.js"></script>
    </body>
  </html>
</Layout>
