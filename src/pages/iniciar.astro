---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div
    class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4 py-8 sm:px-6 lg:px-8"
  >
    <div class="w-full max-w-sm sm:max-w-md space-y-8">
      <!-- Header -->
      <div class="text-center">
        <div
          class="mx-auto h-12 w-12 sm:h-16 sm:w-16 bg-blue-600 rounded-full flex items-center justify-center mb-4"
        >
          <svg
            class="h-6 w-6 sm:h-8 sm:w-8 text-white"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
            ></path>
          </svg>
        </div>
        <h2
          class="text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 mb-2"
        >
          Iniciar Sesión
        </h2>
        <p class="text-sm sm:text-base text-gray-600">
          Accede a tu cuenta para continuar
        </p>
      </div>

      <!-- Form Card -->
      <div
        class="bg-white rounded-xl sm:rounded-2xl shadow-xl border border-gray-100 p-6 sm:p-8"
      >
        <form
          method="POST"
          action="/api/login"
          class="space-y-6"
          id="login-form"
        >
          <!-- Email Field -->
          <div class="space-y-2">
            <label class="block text-sm font-medium text-gray-700" for="email">
              Correo electrónico
            </label>
            <div class="relative">
              <input
                type="email"
                id="email"
                name="email"
                required
                placeholder="tucorreo@ejemplo.com"
                class="w-full px-3 py-3 sm:py-4 pl-10 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm sm:text-base placeholder-gray-400"
              />
              <div
                class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
              >
                <svg
                  class="h-5 w-5 text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207"
                  ></path>
                </svg>
              </div>
            </div>
            <div id="email-error" class="text-red-500 text-xs hidden">
              Por favor ingresa un email válido
            </div>
          </div>

          <!-- Password Field -->
          <div class="space-y-2">
            <label
              class="block text-sm font-medium text-gray-700"
              for="password"
            >
              Contraseña
            </label>
            <div class="relative">
              <input
                type="password"
                id="password"
                name="password"
                required
                placeholder="••••••••"
                class="w-full px-3 py-3 sm:py-4 pl-10 pr-10 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm sm:text-base placeholder-gray-400"
              />
              <div
                class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
              >
                <svg
                  class="h-5 w-5 text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                  ></path>
                </svg>
              </div>
              <button
                type="button"
                id="toggle-password"
                class="absolute inset-y-0 right-0 pr-3 flex items-center"
              >
                <svg
                  id="eye-open"
                  class="h-5 w-5 text-gray-400 hover:text-gray-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  ></path>
                </svg>
                <svg
                  id="eye-closed"
                  class="h-5 w-5 text-gray-400 hover:text-gray-600 hidden"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"
                  ></path>
                </svg>
              </button>
            </div>
            <div id="password-error" class="text-red-500 text-xs hidden">
              La contraseña es requerida
            </div>
          </div>

          <!-- Remember Me & Forgot Password -->
          <div
            class="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0"
          >
            <div class="flex items-center">
              <input
                id="remember-me"
                name="remember-me"
                type="checkbox"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="remember-me" class="ml-2 block text-sm text-gray-700">
                Recordarme
              </label>
            </div>
            <div class="text-sm">
              <a
                href="/forgot-password"
                class="font-medium text-blue-600 hover:text-blue-500 transition-colors"
              >
                ¿Olvidaste tu contraseña?
              </a>
            </div>
          </div>

          <!-- Submit Button -->
          <button
            type="submit"
            id="submit-btn"
            class="w-full flex justify-center items-center py-3 sm:py-4 px-4 border border-transparent rounded-lg shadow-sm text-sm sm:text-base font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 transform hover:scale-[1.02] active:scale-[0.98] disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            <span id="btn-text">Iniciar Sesión</span>
            <svg
              id="loading-spinner"
              class="hidden animate-spin ml-2 h-5 w-5 text-white"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </button>
        </form>

        <!-- Divider -->
        <div class="mt-6">
          <div class="relative">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-300"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-2 bg-white text-gray-500">¿No tienes cuenta?</span
              >
            </div>
          </div>
        </div>

        <!-- Sign Up Link -->
        <div class="mt-6 text-center">
          <a
            href="/register"
            class="font-medium text-blue-600 hover:text-blue-500 transition-colors text-sm sm:text-base"
          >
            Crear una cuenta nueva
          </a>
        </div>
      </div>

      <!-- Security Notice -->
      <div class="text-center">
        <p class="text-xs sm:text-sm text-gray-500">
          Al iniciar sesión, aceptas nuestros
          <a href="/terms" class="text-blue-600 hover:text-blue-500"
            >términos de servicio</a
          >
          y
          <a href="/privacy" class="text-blue-600 hover:text-blue-500"
            >política de privacidad</a
          >
        </p>
      </div>
    </div>

    <!-- Toast Container -->
    <div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2">
      <!-- Toasts aparecerán aquí -->
    </div>
  </div>
</Layout>

<script>
  // Toggle password visibility
  const togglePassword = document.getElementById("toggle-password");
  const passwordInput = document.getElementById("password") as HTMLInputElement;
  const eyeOpen = document.getElementById("eye-open");
  const eyeClosed = document.getElementById("eye-closed");

  togglePassword?.addEventListener("click", () => {
    const type =
      passwordInput.getAttribute("type") === "password" ? "text" : "password";
    passwordInput.setAttribute("type", type);

    eyeOpen?.classList.toggle("hidden");
    eyeClosed?.classList.toggle("hidden");
  });

  // Form validation
  const loginForm = document.getElementById("login-form") as HTMLFormElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const emailError = document.getElementById("email-error");
  const passwordError = document.getElementById("password-error");
  const submitBtn = document.getElementById("submit-btn") as HTMLButtonElement;
  const btnText = document.getElementById("btn-text");
  const loadingSpinner = document.getElementById("loading-spinner");

  // Real-time email validation
  emailInput?.addEventListener("input", () => {
    const isValid = emailInput.checkValidity();
    if (!isValid && emailInput.value.length > 0) {
      emailInput.classList.add(
        "border-red-500",
        "focus:ring-red-500",
        "focus:border-red-500"
      );
      emailInput.classList.remove(
        "border-gray-300",
        "focus:ring-blue-500",
        "focus:border-blue-500"
      );
      emailError?.classList.remove("hidden");
    } else {
      emailInput.classList.remove(
        "border-red-500",
        "focus:ring-red-500",
        "focus:border-red-500"
      );
      emailInput.classList.add(
        "border-gray-300",
        "focus:ring-blue-500",
        "focus:border-blue-500"
      );
      emailError?.classList.add("hidden");
    }
  });

  // Toast notification function
  function showToast(
    message: string,
    type: "success" | "error" | "info" = "info"
  ) {
    const toastColors = {
      success: "bg-green-500",
      error: "bg-red-500",
      info: "bg-blue-500",
    };

    const toast = document.createElement("div");
    toast.className = `${toastColors[type]} text-white px-4 py-3 rounded-lg shadow-lg transform transition-all duration-300 translate-x-full opacity-0 max-w-sm`;
    toast.innerHTML = `
      <div class="flex items-center justify-between">
        <span class="text-sm font-medium">${message}</span>
        <button class="ml-4 text-white hover:text-gray-200" onclick="this.parentElement.parentElement.remove()">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    `;

    const container = document.getElementById("toast-container");
    container?.appendChild(toast);

    setTimeout(() => {
      toast.classList.remove("translate-x-full", "opacity-0");
    }, 100);

    setTimeout(() => {
      toast.classList.add("translate-x-full", "opacity-0");
      setTimeout(() => toast.remove(), 300);
    }, 5000);
  }

  // Form submission
  loginForm?.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Show loading state
    submitBtn.disabled = true;
    btnText!.textContent = "Iniciando...";
    loadingSpinner?.classList.remove("hidden");

    try {
      const formData = new FormData(loginForm);
      const response = await fetch("/api/login", {
        method: "POST",
        body: formData,
      });

      if (response.ok) {
        showToast("Inicio de sesión exitoso", "success");
        // Redirect logic here
        setTimeout(() => {
          window.location.href = "/dashboard";
        }, 1000);
      } else {
        showToast("Credenciales incorrectas", "error");
      }
    } catch (error) {
      console.error("Error:", error);
      showToast("Error de conexión. Intenta de nuevo.", "error");
    } finally {
      // Reset button state
      submitBtn.disabled = false;
      btnText!.textContent = "Iniciar Sesión";
      loadingSpinner?.classList.add("hidden");
    }
  });
</script>
