---
import Layout from "../layouts/Layout.astro";
import { createClient } from "../lib/supabase";
import "../styles/global.css";

const supabase = createClient({
  request: Astro.request,
  cookies: Astro.cookies,
});

const { data } = await supabase.auth.getUser();

// Si no hay usuario, redirigir al login
if (!data.user) {
  return Astro.redirect("/login");
}

// Obtener cuartos del usuario
const { data: cuartos, error } = await supabase
  .from("cuartos")
  .select("*")
  .eq("user_id", data.user.id)
  .order("created_at", { ascending: false });

if (error) {
  console.error("Error obteniendo cuartos:", error);
}
---

<Layout>
  <section class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <!-- Header del perfil -->
      <div class="flex justify-between items-center mb-8">
        <div>
          <h1 class="text-4xl font-bold mb-2">Mi Perfil</h1>
          <p class="text-gray-600">ID: {data.user?.id}</p>
          <p class="text-gray-600">Email: {data.user?.email}</p>
        </div>
        <button
          id="sign-out"
          class="bg-red-600 hover:bg-red-700 px-4 py-2 rounded-md text-white font-bold cursor-pointer disabled:bg-red-500 disabled:hover:bg-red-500 disabled:cursor-not-allowed"
        >
          Cerrar sesión
        </button>
      </div>

      <!-- Sección de cuartos -->
      <div class="mb-8">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-2xl font-bold">Mis Cuartos Publicados</h2>
          <a
            href="/agregar-cuarto"
            class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded-md text-white font-bold"
          >
            + Agregar Cuarto
          </a>
        </div>

        {
          cuartos && cuartos.length > 0 ? (
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {cuartos.map((cuarto) => (
                <div class="bg-white rounded-lg shadow-md overflow-hidden border">
                  <div class="relative">
                    {cuarto.imagen_principal ? (
                      <img
                        src={cuarto.imagen_principal}
                        alt={cuarto.name}
                        class="w-full h-48 object-cover"
                      />
                    ) : (
                      <div class="w-full h-48 bg-gray-200 flex items-center justify-center">
                        <span class="text-gray-500">Sin imagen</span>
                      </div>
                    )}
                    <div class="absolute top-2 right-2 bg-green-600 text-white px-2 py-1 rounded text-sm font-bold">
                      ${cuarto.precio}/mes
                    </div>
                  </div>

                  <div class="p-4">
                    <h3 class="font-bold text-lg mb-2">{cuarto.name}</h3>
                    <p class="text-gray-600 mb-4 line-clamp-2">
                      {cuarto.descripcion}
                    </p>

                    <div class="flex justify-between items-center">
                      <span class="text-sm text-gray-500">
                        {new Date(cuarto.created_at).toLocaleDateString()}
                      </span>
                      <div class="flex space-x-2">
                        <button
                          onclick={`editRoom(${cuarto.id})`}
                          class="bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm"
                        >
                          Editar
                        </button>
                        <button
                          onclick={`deleteRoom(${cuarto.id})`}
                          class="bg-red-500 hover:bg-red-600 text-white py-1 px-3 rounded text-sm"
                        >
                          Eliminar
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-12 bg-gray-50 rounded-lg">
              <div class="text-gray-500 mb-4">
                <svg
                  class="mx-auto h-12 w-12"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h3M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"
                  />
                </svg>
              </div>
              <h3 class="text-lg font-medium text-gray-900 mb-2">
                No tienes cuartos publicados
              </h3>
              <p class="text-gray-500 mb-4">
                ¡Comienza publicando tu primer cuarto!
              </p>
              <a
                href="/agregar-cuarto"
                class="bg-blue-600 hover:bg-blue-700 px-6 py-2 rounded-md text-white font-bold inline-block"
              >
                Publicar mi primer cuarto
              </a>
            </div>
          )
        }
      </div>
    </div>
  </section>
</Layout>

<script>
  import { actions } from "astro:actions";

  const signOutBtn = document.getElementById("sign-out") as HTMLButtonElement;

  signOutBtn?.addEventListener("click", async (e) => {
    e.preventDefault();
    signOutBtn!.disabled = true;
    signOutBtn!.textContent = "Cerrando sesión...";

    try {
      const results = await actions.signOut();

      if (!results.data?.success) {
        signOutBtn!.disabled = false;
        signOutBtn!.textContent = "Cerrar sesión";
        return alert(
          "Ups! No se pudo cerrar sesión. Por favor, intenta de nuevo."
        );
      }
      return window.location.reload();
    } catch (error) {
      signOutBtn.disabled = false;
      signOutBtn.textContent = "Cerrar sesión";
      console.log(error);
      return alert("Algo salió mal. Por favor, intenta de nuevo.");
    }
  });

  // Funciones para editar y eliminar cuartos
  window.editRoom = (roomId: number) => {
    window.location.href = `/editar-cuarto/${roomId}`;
  };

  window.deleteRoom = async (roomId: number) => {
    if (confirm("¿Estás seguro de que quieres eliminar este cuarto?")) {
      try {
        const response = await fetch(`/api/cuartos/${roomId}`, {
          method: "DELETE",
        });

        if (response.ok) {
          location.reload();
        } else {
          alert("Error al eliminar el cuarto");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Error al eliminar el cuarto");
      }
    }
  };
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
