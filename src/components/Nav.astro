---
import { items } from "../logic/itemNav.js";
import BotonMovil from "./BotonMovil.astro";
import { createClient } from "../lib/supabase";

// Obtener el usuario autenticado usando el mismo método que el middleware
const supabase = createClient({
  request: Astro.request,
  cookies: Astro.cookies,
});

const {
  data: { user },
} = await supabase.auth.getUser();

// Filtrar items basándose en el estado de autenticación
const filteredItems = items.filter((item) => {
  // Si requiere autenticación y no hay usuario, no mostrar
  if (item.requiresAuth && !user) {
    return false;
  }
  // Si debe ocultarse cuando hay autenticación y hay usuario, no mostrar
  if (item.hideWhenAuth && user) {
    return false;
  }
  return true;
});

// Debug: mostrar información de autenticación
console.log("=== NAV DEBUG ===");
console.log("Usuario autenticado:", !!user);
console.log("User ID:", user?.id || "N/A");
console.log("Email:", user?.email || "N/A");
console.log(
  "Items antes del filtro:",
  items.map((item) => ({
    label: item.label,
    requiresAuth: item.requiresAuth,
    hideWhenAuth: item.hideWhenAuth,
  }))
);
console.log(
  "Items filtrados:",
  filteredItems.map((item) => item.label)
);
console.log("=== FIN DEBUG ===");
---

<section class="sticky top-0 z-50 bg-white shadow-sm border-b border-gray-200">
  <div class="max-w-6xl mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center space-x-3">
        <a href="/" aria-label="Ir a la página de inicio de RANTU">
          <img
            src="/favicon.svg"
            alt="Logo de RANTU"
            class="w-8 h-8"
            width="32"
            height="32"
          />
        </a>
        <h1 class="text-xl font-semibold text-gray-800">
          <a href="/" aria-label="RANTU - Página de inicio">R A N T U</a>
        </h1>
      </div>

      <!-- Desktop Navigation -->
      <nav
        class="hidden md:flex items-center space-x-6"
        aria-label="Navegación principal"
        role="navigation"
      >
        {
          filteredItems.map((item) =>
            item.isButton ? (
              <a
                href={item.href}
                class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                aria-label={`${item.label} - Acción principal`}
              >
                {item.label}
              </a>
            ) : (
              <a
                href={item.href}
                class="text-gray-700 hover:text-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded px-2 py-1"
                aria-label={`Navegar a ${item.label}`}
              >
                {item.label}
              </a>
            )
          )
        }
      </nav>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-btn"
        class="md:hidden p-2 text-gray-700 hover:bg-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        aria-expanded="false"
        aria-controls="mobile-menu"
        aria-label="Abrir menú de navegación móvil"
      >
        <BotonMovil />
      </button>
    </div>

    <!-- Mobile Menu -->
    <div
      id="mobile-menu"
      class="md:hidden hidden py-4 border-t border-gray-200"
      role="navigation"
      aria-label="Menú de navegación móvil"
    >
      <div class="flex flex-col space-y-3">
        {
          filteredItems.map((item) =>
            item.isButton ? (
              <a
                href={item.href}
                class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-block text-center focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                aria-label={`${item.label} - Acción principal`}
              >
                {item.label}
              </a>
            ) : (
              <a
                href={item.href}
                class="text-gray-700 hover:text-blue-600 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded px-2 py-1"
                aria-label={`Navegar a ${item.label}`}
              >
                {item.label}
              </a>
            )
          )
        }
      </div>
    </div>
  </div>
</section>

<script src="../logic/scriptNav.js"></script>
