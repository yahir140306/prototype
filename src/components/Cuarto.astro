---
import { createClient } from "../lib/supabase";
import { decodeHexUrl } from "../utils/urlDecoder.js";

const supabase = createClient({
  request: Astro.request,
  cookies: Astro.cookies,
});

const { data: cuartos, error } = await supabase.from("cuartos").select("*");

// console.log("=== DEBUG CONSULTA SUPABASE ===");
// console.log("Error:", error);
// console.log("Cuartos obtenidos:", cuartos);
// console.log("================================");

// Procesar las URLs de los cuartos solo si hay datos
const cuartosProcesados =
  cuartos?.map((cuarto) => ({
    ...cuarto,
    imagen_1: decodeHexUrl(cuarto.imagen_1),
  })) || [];

// console.log("=== DEBUG CUARTOS PROCESADOS ===");
// if (cuartos && cuartos.length > 0) {
//   cuartosProcesados.forEach((cuarto, index) => {
//     console.log(
//       `Cuarto ${index} - imagen_1 original:`,
//       cuartos[index]?.imagen_1
//     );
//     console.log(`Cuarto ${index} - imagen_1 decodificada:`, cuarto.imagen_1);
//   });
// } else {
//   console.log("No hay cuartos para procesar");
// }
// console.log("==============================");
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cuartos Disponibles</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold text-center mb-8">Cuartos Disponibles</h1>

      <!-- Filtro de Precios -->
      <div
        class="max-w-md mx-auto mb-8 p-6 bg-white rounded-lg shadow-sm border"
      >
        <h2 class="text-lg font-semibold mb-4 text-gray-800">
          Filtrar por Precio
        </h2>

        <div class="space-y-4">
          <div class="flex items-center space-x-4">
            <label class="text-sm font-medium text-gray-700 w-16">Desde:</label>
            <input
              type="number"
              id="precio-min"
              min="0"
              step="1000"
              placeholder="0"
              class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>

          <div class="flex items-center space-x-4">
            <label class="text-sm font-medium text-gray-700 w-16">Hasta:</label>
            <input
              type="number"
              id="precio-max"
              min="0"
              step="1000"
              placeholder="Sin límite"
              class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            />
          </div>

          <div class="flex space-x-2">
            <button
              id="filtrar-btn"
              class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors duration-200 font-medium"
            >
              Filtrar
            </button>
            <button
              id="limpiar-btn"
              class="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md transition-colors duration-200 font-medium"
            >
              Limpiar
            </button>
          </div>
        </div>
      </div>

      {
        error && (
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            <strong>Error:</strong> {error.message || "Error desconocido"}
            <details class="mt-2">
              <summary class="cursor-pointer">Ver detalles técnicos</summary>
              <pre class="mt-2 text-sm bg-red-50 p-2 rounded">
                {JSON.stringify(error, null, 2)}
              </pre>
            </details>
          </div>
        )
      }

      {
        !error && cuartosProcesados && cuartosProcesados.length === 0 && (
          <div class="text-center py-12">
            <p class="text-gray-500 text-lg">
              No hay cuartos disponibles en este momento.
            </p>
            <p class="text-gray-400 text-sm mt-2">
              ¿Quieres agregar el primer cuarto?
            </p>
          </div>
        )
      }

      {
        !error && !cuartosProcesados && (
          <div class="text-center py-12">
            <p class="text-gray-500 text-lg">Cargando cuartos...</p>
          </div>
        )
      }

      <div id="cuartos-container" class="grid grid-cols-1 gap-6">
        {
          cuartosProcesados?.map((cuarto) => (
            <div
              class="cuarto-card border rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300 bg-white"
              data-precio={cuarto.precio}
            >
              <div class="relative">
                <img
                  src={cuarto.imagen_1 || "/Images/default.jpeg"}
                  alt={cuarto.name}
                  class="w-full h-48 object-cover"
                  loading="lazy"
                  onerror="this.src='/Images/default.jpeg'; this.onerror=null;"
                />
                <div class="absolute top-2 left-2 bg-green-500 text-white px-2 py-1 rounded text-sm font-medium">
                  Disponible
                </div>
              </div>

              <div class="p-4">
                <h2 class="text-xl font-semibold mb-2 text-gray-800 line-clamp-1">
                  {cuarto.name}
                </h2>

                <p class="text-gray-600 mb-3 line-clamp-2 text-sm leading-relaxed">
                  {cuarto.descripcion}
                </p>

                <div class="flex justify-between items-center">
                  <div class="flex flex-col">
                    <span class="text-2xl font-bold text-blue-600">
                      ${cuarto.precio.toLocaleString()}
                    </span>
                    <span class="text-sm text-gray-500">por mes</span>
                  </div>

                  <a
                    href={`/cuarto/${cuarto.id}`}
                    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors duration-200 shadow-sm hover:shadow-md font-medium"
                  >
                    Ver más
                  </a>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>

    <style>
      /* Utility classes para limitar líneas de texto */
      .line-clamp-1 {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
    </style>

    <script is:inline>
      // Filtrado de cuartos por precio
      document.addEventListener("DOMContentLoaded", function () {
        function filtrarCuartos() {
          const precioMin =
            parseInt(document.getElementById("precio-min").value) || 0;
          const precioMax =
            parseInt(document.getElementById("precio-max").value) || Infinity;

          const cuartoCards = document.querySelectorAll(".cuarto-card");
          let cuartosMostrados = 0;

          cuartoCards.forEach(function (card) {
            const precio = parseInt(card.getAttribute("data-precio"));

            if (precio >= precioMin && precio <= precioMax) {
              card.style.display = "block";
              cuartosMostrados++;
            } else {
              card.style.display = "none";
            }
          });

          mostrarMensajeResultados(
            cuartosMostrados,
            precioMin,
            precioMax,
            cuartoCards.length
          );
        }

        function limpiarFiltros() {
          document.getElementById("precio-min").value = "";
          document.getElementById("precio-max").value = "";

          const cuartoCards = document.querySelectorAll(".cuarto-card");
          cuartoCards.forEach(function (card) {
            card.style.display = "block";
          });

          const mensajeExistente =
            document.getElementById("mensaje-resultados");
          if (mensajeExistente) {
            mensajeExistente.remove();
          }
        }

        function mostrarMensajeResultados(cantidad, min, max, total) {
          const cuartosContainer = document.getElementById("cuartos-container");
          const mensajeExistente =
            document.getElementById("mensaje-resultados");

          if (mensajeExistente) {
            mensajeExistente.remove();
          }

          if (cantidad === 0) {
            const mensaje = document.createElement("div");
            mensaje.id = "mensaje-resultados";
            mensaje.className = "text-center py-8 px-4";
            mensaje.innerHTML =
              '<div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6">' +
              '<h3 class="text-lg font-medium text-yellow-800 mb-2">No se encontraron cuartos</h3>' +
              '<p class="text-yellow-600">' +
              "No hay cuartos disponibles en el rango de precios de " +
              "<strong>$" +
              min.toLocaleString() +
              "</strong> " +
              (max === Infinity
                ? "en adelante"
                : "a <strong>$" + max.toLocaleString() + "</strong>") +
              "." +
              "</p>" +
              '<button onclick="limpiarFiltros()" class="mt-3 bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-md transition-colors duration-200">' +
              "Ver todos los cuartos" +
              "</button>" +
              "</div>";
            cuartosContainer.appendChild(mensaje);
          } else if (cantidad < total) {
            const mensaje = document.createElement("div");
            mensaje.id = "mensaje-resultados";
            mensaje.className = "text-center py-4 px-4";
            mensaje.innerHTML =
              '<div class="bg-blue-50 border border-blue-200 rounded-lg p-4">' +
              '<p class="text-blue-700">' +
              "Mostrando <strong>" +
              cantidad +
              "</strong> de <strong>" +
              total +
              "</strong> cuartos disponibles " +
              "en el rango de <strong>$" +
              min.toLocaleString() +
              "</strong> " +
              (max === Infinity
                ? "en adelante"
                : "a <strong>$" + max.toLocaleString() + "</strong>") +
              "." +
              "</p>" +
              "</div>";
            if (cuartosContainer.firstChild) {
              cuartosContainer.insertBefore(
                mensaje,
                cuartosContainer.firstChild
              );
            }
          }
        }

        // Hacer funciones globales para onclick
        window.limpiarFiltros = limpiarFiltros;
        window.filtrarCuartos = filtrarCuartos;

        // Event listeners
        document
          .getElementById("filtrar-btn")
          .addEventListener("click", filtrarCuartos);
        document
          .getElementById("limpiar-btn")
          .addEventListener("click", limpiarFiltros);

        document
          .getElementById("precio-min")
          .addEventListener("keypress", function (e) {
            if (e.key === "Enter") filtrarCuartos();
          });

        document
          .getElementById("precio-max")
          .addEventListener("keypress", function (e) {
            if (e.key === "Enter") filtrarCuartos();
          });
      });
    </script>
  </body>
</html>
